possible inputs:
user_id /*for student and teacher*/
user_mail (for login)
question_id
task_id
answer_id
password
task_id_list
...


API:

1. get('/')
    redirect to home page

2. post('login')
    input: user, password
    output: status 200 & json with user deatils /401 - unauthorized /
    example to output : [
                              {
                                "PersonalID": "2",
                                "LastName": "קריגל",
                                "FirstName": "שקד",
                                "School": "Mekif H",
                                "City": "Ashdod",
                                "UserType": 2,
                                "Email": "shakedkr@post.bgu.ac.il",
                                "Pass": "123456"
                              }
                            ]


3. post('getListOfTasks')
    input: user_id
    output: status 200 & json with task information / status 204 - no content / status 200 -failure
    example to output: [
                         {
                           "T_id": 1,
                           "T_title": "מטלת ניסוי",
                           "T_description": "מטלת ניסוי לבסיס הנתונים"
                         }
                       ]

4. post('getQuestion')
    input: user_id, t_id
    output: status 200 & json with (one) question information / status 676 - End of task
    example to output : {
                          "question": {
                            "Q_id": 2,
                            "Q_qeustion": "לפניך סרטון קצר. צפה בו וענה על השאלה - מהי מטרתו המרכזית של יוצר הסרטון? ",
                            "isMultipuleAns": 0,
                            "Q_correctFB": " הצלחת לזהות שמדובר בטקסט פרסומי שמטרתו להניע את הצופים לרכוש ממוצרי RC קולה. פרטי משרד הפרסום שהופיעו בראשית הסרטון מסייעים להבנה שמדובר בפרסומת, ומכאן צריך רק לבדוק מה מנסים למכור לנו...",
                            "Q_mediaType": "youtube",
                            "Q_media": "crs0TiiYE4I",
                            "Q_notCorrectFB": "הסרטון הציג אמנם את תשובתך אך לא זו הייתה מטרתו המרכזית. כדאי לחשוב: מי יצר את הסרטון? מהי הכותרת שלו? מה עשויה להיות מטרתו אם כך?",
                            "Q_skill": "זיהוי מטרה מרכזית",
                            "Q_difficulty": "קלה",
                            "Q_proffession": "הבעה",
                            "Q_approved": 1,
                            "Q_disabled": 0
                          },
                          "answers": [
                            {
                              "A_id": 5,
                              "answer": "לשכנע את הצופה לרכוש RC קולה",
                              "isCorrect": 1
                            },
                            {
                              "A_id": 6,
                              "answer": "להדגים מה מוכן ילד לעשות כדי להרשים את חברתו",
                              "isCorrect": 0
                            },
                            {
                              "A_id": 7,
                              "answer": "להראות את מידת היצירתיות של ילדים",
                              "isCorrect": 0
                            },
                            {
                              "A_id": 8,
                              "answer": "להעביר מסר ללא מילים",
                              "isCorrect": 0
                            }
                          ]
                        }


5. post('questionDone')
    input: quest_id , user_id , task_id
    action: delete question from student queue
    output: status 200 -success / 400 - failure


6. post('updateAnswer')
    input: user_id, task_id , quest_id , ans_id, second_chance
    action: add instance of answer to db
    output: status 200 -success / 400 - failure


7.post('/questionApproveOrNot')
	input: is_approved, q_id
    output: status 200 /400 - server error
    example to output : No output
            notice: if is_approved is the same value of boolean in row it will return an error that value is the same (same error if row dose not exist.
	

8.post('/addTaskToGroup')
	input: group_id, task_id
    output: status 200 / 400 - Insertion error - check DB (group/student does not exist or relation error!
    example to output : No output


9.post('/createGroup')
	input: group_name,school,city,is_teacher_group,group_user_type,teacher_id,is_master,is_approved
    output: status 200 /400 - Insertion error - check DB (group/student does not exist or relation error!"
    example to output : No output


10.post('/reportQuestion')
	input: q_id, report_offensive, report_question, report_answer
    output: status 200 / 400 - No group Id found error!/Insertion error - check DB (student does not exist or relation) error!
    example to output : No output


11.post('/editQuestion')
	input: id, question, media, correctFB, notCorrectFB, skill, difficulty, proffesion, approved, disabled
    output: status 200 / 400 - No group Id found error!/Insertion error - check DB (student does not exist or relation) error!
    example to output : No output


12.post('/registerUser')
	input: personal_id, group_code, last_name, first_name, school, city, user_type, email, password
    output: status 200 / 409 (conflict. while insert new user. probably duplicate id insertion) / 400 - No group Id found error!/Insertion error - check DB (student does not exist or relation) error!
    example to output : No output


13.post('/addUsersToGroup')
	input: users/* array of users */, group_id
    output: status 200 "inserted!" /400 - Insertion error - check DB (group/student does not exist or relation error!
    example to output : No output


14.post('/getGroupByUser')
	input: teacher_id /** not user_id inorder to show that it only happens when it is a user type of a teacher  **/
    output: status 200 / 400 - Insertion error - check DB (group/student does not exist or relation error!
    example to output : 	
{  "groups": [
	{
      "GroupId": 1111,
      "GroupName": "בדיקות",
      "teacherID": "1",
      "IsMasterGroup": 1,
      "GroupeCode": "01111"
    },
    {
      "GroupId": 1234567,
      "GroupName": "שיעור פרטי",
      "teacherID": "1",
      "IsMasterGroup": 0,
      "GroupeCode": "0123456"
    }
  ],
  "tasks": [
    {
      "T_id": 1,
      "T_title": "מטלת ניסוי",
      "T_description": "מטלת ניסוי לבסיס הנתונים"
    },
    {
      "T_id": 2,
      "T_title": "2מטלת ניסוי",
      "T_description": "מטלת ניסוי לבסיס הנתונים"
    }
  ]
}
    

15.post('/addQuestion')
	input:  question_title, is_multiple_ans, question_media_type, question_media, quest_correct_fb, quest_incorrect_fb,
	quest_skill, quest_difficulty, quest_proffesion, quest_is_approved, quest_disabled, who_created,
	answer1, answer2, answer3, answer4,correctAnswerIndex
    output: status 200 "inserted!" /400 - Insertion error - check DB (group/student does not exist or relation error!)
    example to input :
    Q_reported_Offensive int not null,
    Q_reported_Question int not null,
    Q_reported_Answer int not null,

     {
                     "question_title": "testQ title",
                     "is_multiple_ans": "0",
                     "question_media": "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec qu",
                     "question_media_type": "text",
                     "quest_correct_fb": "well done",
                     "quest_incorrect_fb": "it was not the correct answer",
                     "quest_skill": "testing skills!",
                     "quest_difficulty": "easy",
                     "quest_proffesion": "test profesion",
                     "quest_is_approved": "1",
                     "who_created": "1",
                     "quest_disabled": "0",
                     "answer1": "a",
                     "answer2": "b",
                     "answer3": "c",
                     "answer4": "d",
                     "correctAnswerIndex": "2,3"    //indexes are: 0,1,2,3
                 }
	
16.post('/createTask')
	input:t_title, t_description, t_owner, t_approved, questions
	input example:{"t_title":"TiTlE-TeSt","t_description":"desc_desc_desc","t_owner":1,
                "t_approved":1,"questions":[1,3,4,15,8,7]}
	output: status 200 / 400 - Insertion error - check DB (group/student does not exist or relation error!


/*15.post('/checkGroup')
	input:group_id
	input example:{"group_id":"0123"}
	output: status 200 / 400 - "No group found by code error!"*/


	/***************** MARATON  *********************/
17.post('/getAllTasks')
    output: status 200 with json
    [
      {
        "T_id": 1,
        "T_title": "מטלת ניסוי",
        "T_description": "מטלת ניסוי לבסיס הנתונים",
        "T_owner": "1",
        "T_approved": 1
      },
      {
        "T_id": 2,
        "T_title": "2מטלת ניסוי",
        "T_description": "מטלת ניסוי לבסיס הנתונים",
        "T_owner": "4",
        "T_approved": 1
      }
    ]


18.post('/getAllGroupForTask')
input: task_id,teacher_id
output: status 200 with list of group / status 204 - no group for this task/  400 -error

[
  {
    "GroupId": 1234567,
    "GroupName": "שיעור פרטי",
    "teacherID": "1",
    "IsMasterGroup": 0,
    "GroupeCode": "0123456",
    "isApproved": 0
  }
]


19.post('/checkIfGroupCodeExists')
input: group_code
output: status 200 with json  / 204 - group code does not exist / 400 - "DB error"

{"userType":1}


20. post('/getStudentListFromGroupId')
input: group_id
output: status 200 with json / 204 - no content  / 400 - "DB error"
example:
[
  {
    "PersonalID": "1111",
    "LastName": "משפחה",
    "FirstName": "שם",
    "UserType": 0,
    "Email": "howqw1@gmail.com",
    "Pass": "123456"
  },
  {
    "PersonalID": "2",
    "LastName": "קריגל",
    "FirstName": "שקד",
    "UserType": 0,
    "Email": "shakedkr@post.bgu.ac.il",
    "Pass": "123456"
  },
  {
    "PersonalID": "2030",
    "LastName": "משפחה",
    "FirstName": "שם",
    "UserType": 0,
    "Email": "new@gmail.com",
    "Pass": "123456"
  },
  {
    "PersonalID": "3",
    "LastName": "גנים",
    "FirstName": "הדס",
    "UserType": 0,
    "Email": "hadasganim@gmail.com",
    "Pass": "123456"
  }
]



21. post('getAllGroupForTeacher')
input: user_id (of the teacher)
output: status 200 with json  / 204 - no content / 400 - "DB error"

example:
* otherwise :
[
  {
    "GroupId": 1,
    "GroupName": "קבוצת מורים",
    "School": "מענית",
    "City": "באר שבע",
    "teacherID": "1",
    "isTeacherGroup": 1,
    "IsMasterGroup": 1,
    "GroupeCode": "teach",
    "GroupUserType": 1,
    "isApproved": 1
  },
  {
    "GroupId": 1234567,
    "GroupName": "שיעור פרטי",
    "School": "מבועות",
    "City": "אשדוד",
    "teacherID": "1",
    "isTeacherGroup": 0,
    "IsMasterGroup": 1,
    "GroupeCode": "0123456",
    "GroupUserType": 1,
    "isApproved": 1
  }
]

22. post('getAllSchollByCity')
input: city
output: status 200 with json  / 204 - no content/ 400 - "DB error"
exmple:
[
  {
    "School": "א",
  },
  {
    "School": "ב",
  },
  {
    "School": "ג",
  }
]

23. post('getGroupsBySchool')
input: school
output: status 200 with json  / 204 - no content/ 400 - "DB error"
exmple:

24. post('addNewSchool')
input:city,school
output: status 200 with json  / 400 - double insertion - school already exist in this city

25. post('getValidQuestions')
input:is_app,is_disabled
output: status 200 with json  / 400 - double insertion - school already exist in this city

26. post('getGroupsByTeacherAndCity')
input:teacher_id,city
output: status 200 with json  / 400 - double insertion - school already exist in this city

27. post('getAllTeachersBySchoolAndCity')
input:school,city
output: status 200 with json  / 400 - double insertion - school already exist in this city

28. post('getAllStudentForGroup')
input:group_id
output: status 200 with json  / 204 - empty / 400 - double insertion - school already exist in this city

29. post('getGroupBySchoolAndCity')
input: school , city
output: status 200 with json  / 204 - no content/ 400 - "DB error"
example:

[
  {
    "GroupId": 123456,
    "GroupName": "טקסטרטגיה",
    "School": "מבועות",
    "City": "אשדוד",
    "teacherID": "4",
    "isTeacherGroup": 0,
    "IsMasterGroup": 1,
    "GroupeCode": "0123",
    "GroupUserType": 1,
    "isApproved": 1
  },
  {
    "GroupId": 1234567,
    "GroupName": "שיעור פרטי",
    "School": "מבועות",
    "City": "אשדוד",
    "teacherID": "1",
    "isTeacherGroup": 0,
    "IsMasterGroup": 1,
    "GroupeCode": "0123456",
    "GroupUserType": 1,
    "isApproved": 1
  }
]

30. post('getQuestionsByParamter')
inpupt: media_types,skills,difficulties,user_id
        for example: difficulties = "קלה", "בינונית" or difficulties = "קלה"
output: status 200 with list of Question / status 204 - no content
exmple :
[
  {
    "Q_id": 1,
    "Q_qeustion": "האזן לשיחה המוקלטת. לשם מה החליטו במפעל הפיס להקליט שיחות של אנשים עם אראלה?",
    "isMultipuleAns": 0,
    "Q_mediaType": "page",
    "Q_media": "http://rr-d.vidnt.com/vod/aod/pas/240/26?path=&files[]=9-3-16.mp3&autoplay=true",
    "Q_correctFB": "שיחה כזאת מעבר להזדהות וההתרגשות אכן גורמת לאנשים לחוש שזכייה היא דבר אפשרי.",
    "Q_notCorrectFB": "נסו לחשוב אם יש מטרה אחת בולטת שהאחרות עשויות לשרת אותה.",
    "Q_skill": "זיהוי מטרה מרכזית",
    "Q_difficulty": "קלה",
    "Q_proffession": "הבעה",
    "Q_approved": 1,
    "Q_disabled": 0,
    "Q_owner": "1"
  }
]

31. post('getAllSkills')
inpupt: none
output: status 200 with list of Skills / status 204 - no content
exmple :
[
  {
    "Q_skill": "זיהוי מטרה מרכזית"
  },
  {
    "Q_skill": "הסקת מסקנות"
  },
  {
    "Q_skill": "רעיון מרכזי"
  },
  {
    "Q_skill": "איתור מידע"
  }
]


32. post('generateRandTask')
input:
{
   "media_types": "text",
   "student_id": "4",
   "skills": "הסקת מסקנות",
   "rand_num": "3",
   "difficulties": "קלה"
}
output: status 200 / status 415 - not enough questions
exmple :

33. post('sendTaskToStudents')
input:
{
   "students": "[2,3]",
   "task_id": "2",
}
output: status 200 / status 204 - not enough questions / 400 - "DB Error"
exmple :


33. post('getReported')
input:
output: status 200 / status 204 - not enough questions / 400 - "DB Error"
exmple :

[
    {
        "Q_id": 1,
        "Q_qeustion": "האזן לשיחה המוקלטת. לשם מה החליטו במפעל הפיס להקליט שיחות של אנשים עם אראלה?",
        "isMultipuleAns": 0,
        "Q_mediaType": "page",
        "Q_media": "http://rr-d.vidnt.com/vod/aod/pas/240/26?path=&files[]=9-3-16.mp3&autoplay=true",
        "Q_correctFB": "שיחה כזאת מעבר להזדהות וההתרגשות אכן גורמת לאנשים לחוש שזכייה היא דבר אפשרי.",
        "Q_notCorrectFB": "נסו לחשוב אם יש מטרה אחת בולטת שהאחרות עשויות לשרת אותה.",
        "Q_skill": "זיהוי מטרה מרכזית",
        "Q_difficulty": "קלה",
        "Q_proffession": "הבעה",
        "Q_reported_Offensive": 14,
        "Q_reported_Question": 35,
        "Q_reported_Answer": 14,
        "Q_approved": 1,
        "Q_disabled": 0,
        "Q_owner": "1"
    },
    {
        "Q_id": 2,
        "Q_qeustion": "לפניך סרטון קצר. צפה בו וענה על השאלה - מהי מטרתו המרכזית של יוצר הסרטון? ",
        "isMultipuleAns": 0,
        "Q_mediaType": "youtube",
        "Q_media": "crs0TiiYE4I",
        "Q_correctFB": " הצלחת לזהות שמדובר בטקסט פרסומי שמטרתו להניע את הצופים לרכוש ממוצרי RC קולה. פרטי משרד הפרסום שהופיעו בראשית הסרטון מסייעים להבנה שמדובר בפרסומת, ומכאן צריך רק לבדוק מה מנסים למכור לנו...",
        "Q_notCorrectFB": "הסרטון הציג אמנם את תשובתך אך לא זו הייתה מטרתו המרכזית. כדאי לחשוב: מי יצר את הסרטון? מהי הכותרת שלו? מה עשויה להיות מטרתו אם כך?",
        "Q_skill": "זיהוי מטרה מרכזית",
        "Q_difficulty": "קלה",
        "Q_proffession": "הבעה",
        "Q_reported_Offensive": 0,
        "Q_reported_Question": 1,
        "Q_reported_Answer": 0,
        "Q_approved": 1,
        "Q_disabled": 0,
        "Q_owner": "1"
    },
    {
        "Q_id": 3,
        "Q_qeustion": "לפניך סרטון קצר. צפה בו. מה הקשר בין הפרסומת לבין המוצר שאותו היא מנסה למכור? ",
        "isMultipuleAns": 0,
        "Q_mediaType": "youtube",
        "Q_media": "rR3BlwTOvMQ",
        "Q_correctFB": "יופי של תשובה! איתרת נכון את המסר הסמוי הקיים בפרסומת - הקישור בין סיסמת הפרסום לפרסומת עצמה.",
        "Q_notCorrectFB": "לא ממש. אמנם תינוקות הם חמודים והסרטון משעשע אבל כשמפרסם בוחר בתוכן מסוים - יש לכך קשר למטרתו. כדאי לחשוב מה מפרסמים כאן ומה המסר המועבר.",
        "Q_skill": "זיהוי מטרה מרכזית",
        "Q_difficulty": "קלה",
        "Q_proffession": "הבעה",
        "Q_reported_Offensive": 3,
        "Q_reported_Question": 1,
        "Q_reported_Answer": 0,
        "Q_approved": 1,
        "Q_disabled": 0,
        "Q_owner": "1"
    }
]


33. post('getApprovedQuestion')
input:
output: status 200 / status 204 - not enough questions / 400 - "DB Error"
exmple :


33. post('getUnapprovedQuestion')
input:
output: status 200 / status 204 - not enough questions / 400 - "DB Error"
exmple :


34. post('getTeachersGroupByCityAndSchool')
input:school, city (example - {"school": "מענית","city": "באר שבע"})
output: status 200 + list of teachers(array of StudentId) / 400 - "DB Error"
exmple : [{"StudentId":"1"}]


35. post('getAnswersByQid')
input:q_id
output: status 200 + list of answers / 400 - "DB Error"
exmple : [
    {
        "A_id": 1,
        "Q_id": 1,
        "answer": "כדי לשכנע אנשים שהזכייה בפיס אפשרית",
        "isCorrect": 1
    },
    {
        "A_id": 2,
        "Q_id": 1,
        "answer": "כדי לגרום לאנשים להתרגש",
        "isCorrect": 0
    },
    {
        "A_id": 3,
        "Q_id": 1,
        "answer": "כדי שאנשים ירגישו הזדהות עם הזוכים",
        "isCorrect": 0
    },
    {
        "A_id": 4,
        "Q_id": 1,
        "answer": "כדי שאנשים יחשבו כיצד הם היו מגיבים לשיחה",
        "isCorrect": 0
    }
]


36. post('editQuestion')
input:
{
  "id": "1",
  "question": "testQ title",
  "mediaType": "text",
  "media": "Lorem ipsum",
  "is_multiple_ans": "0",
  "correctFB": "well done",
  "notCorrectFB": "it was not the correct answer",
  "skill": "testing skills!",
  "difficulty": "easy",
  "proffesion": "test profesion",
  "Q_reported_Offensive": 14,
  "Q_reported_Question": 35,
  "Q_reported_Answer": 14,
  "approved": "1",
  "disabled": "0",
  "answers":
  [
      {"A_id": "1", "answer": "idan", "isCorrect": "1"},
      {"A_id": "2", "answer": "idan2", "isCorrect": "0"},
      {"A_id": "3", "answer": "idan3", "isCorrect": "0"},
      {"A_id": "4", "answer": "idan4", "isCorrect": "0"}
  ]
}
output: status 200 + list of answers / 400 - "DB Error"
exmple : [{"StudentId":"1"}]


37. post('checkIfpassIsCorrectByID')
input:personal_id, password
output: status 200 + list of answers / 205 - wrong password / 400 - "DB Error"
exmple : [
             {
                 "PersonalID": "1"
             }
         ]


38. post('getQuestionStatistics')
input:q_id
output: status 200 / 400 - "DB Error"
example:
[
    {
        "StudentsThatWereWrong": 3,
        "StudentsCorrectFirstTry": 1,
        "StudentsCorrectSecondTry": 1
    }
]
// the total stats are the sum of the three above



39. post('getStudentsMissingTaskInGroup')
input:t_id, group_id
output: status 200 / 400 - "DB Error"
example:
[
    {
        "StudentId": "2"
    },
    {
        "StudentId": "3"
    }
]// the total stats are the sum of the three above


40. post('disableQuestion')
input:disable_status, q_id
output: status 200 / 400 - "DB Error"
example:


41. post('getStudentStatistics')
input:s_id
output: status 200 / 204 - empty content / 400 - "DB Error"
example:
[
    {
        "Q_skill": "זיהוי מטרה מרכזית",
        "totalAnsForSkill": 4,
        "correctAnsForSkill": 1
    },
    {
        "Q_skill": "רעיון מרכזי",
        "totalAnsForSkill": 1,
        "correctAnsForSkill": 1
    }
]

0-student
1-teacher
2-superuser